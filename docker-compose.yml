version: '3.8'
services:
  laravel:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - user=laravel_app_test_user_2
      - uid=1000
    container_name: "${APP_NAME}"
    restart: unless-stopped
    working_dir: /var/www
    depends_on:
      - db_test_2
    # tty: true
    volumes:
      - shared-volume:/var/www
      - .env:/var/www/.env
      #- ./:/var/www
      - ./storage:/var/www/storage
      #- ./docker/php/local.ini:/usr/local/etc/php-fpm.d/www.conf
      #- public:/var/www/public
      # - ./docker-compose/php/local.ini:/etc/nginx/conf.d
    networks:
      - app-network
    # expose:
    #   - 9000

  nginx:
    image: ghcr.io/mimachh/nginx-laravel-11:latest
    container_name: "nginx-${APP_NAME}"
    restart: unless-stopped
    ports: 
      - "6162:80"
      - "443:443"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=r-p"
      - "traefik.http.routers.${APP_URL}.rule=Host(`${APP_DOMAIN}`)"
      - "traefik.http.routers.${APP_URL}.entrypoints=websecure,web"
      - "traefik.http.routers.${APP_URL}.tls=true"
      - "traefik.http.routers.${APP_URL}.tls.certresolver=myresolver"
      - "traefik.http.services.${APP_URL}.loadbalancer.server.port=80"
      - "traefik.http.middlewares.autodetect.contenttype=true"
      #- "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      #- "traefik.http.routers.http${APP_URL}.entrypoints=web"
      - "traefik.http.routers.http${APP_URL}.rule=Host(`${APP_DOMAIN}`)"

    environment:
      - PHP_FPM_CONTAINER=${APP_NAME}
    volumes:
      # - .:/var/www
      - shared-volume:/var/www
    networks:
      - app-network
      - r-p
    depends_on:
      - "${APP_NAME}"


  db_test_2:
    image: postgres:16.2
    container_name: db_test_2
    environment:
      POSTGRES_DB: laravel
      POSTGRES_USER: user
      POSTGRES_PASSWORD: secret
      PGDATA: /data/postgres
      TZ: Europe/Paris
    volumes:
      - db_test_2:/data/postgres
    ports:
      - "5432:5432"
    networks:
          # - r-p
      - app-network
    restart: unless-stopped
  
  # redis
  # supervisor

networks:
  app-network:
    driver: bridge
  r-p:
    external: true
volumes:
  # public:
  shared-volume:
  db_test_2:
    driver: local